---
import Footer from "../components/Footer.astro";
import Head from "../components/Head.astro";
import Navigation from "../components/Navigation.astro";
export interface Props {
  title: string;
  lang: string;
}

const { title, lang } = Astro.props;
---

<!DOCTYPE html>
<html lang={lang}>
  <Head title={title} />
  <body
    class="bg-light-background dark:bg-dark-background text-dark-background dark:text-light-background"
  >
    <Navigation />
    <div class="overflow-hidden"><slot /></div>
    <Footer />
    <script>
      const html = document.documentElement;
      if (!!localStorage.getItem("dark")) {
        html.classList.add("dark");
      }

      const animations = [...document.querySelectorAll(".animate")];
      const callback = (
        entries: IntersectionObserverEntry[],
        observer: IntersectionObserver
      ) => {
        entries.forEach((entry: IntersectionObserverEntry) => {
          let animationClasses =
            entry.target.getAttribute("data-animation") ?? "";
          animationClasses = animationClasses.split(" ");

          if (entry.isIntersecting) {
            if (
              !entry.target.getAttribute("data-animation-repeat") &&
              entry.target.getAttribute("data-animation-repeated")
            ) {
              observer.unobserve(entry.target);
              return;
            }
            entry.target.setAttribute("data-animation-repeated", "true");
            animationClasses.forEach((className: any) => {
              entry.target.classList.add(className);
            });
          } else if (
            !entry.isIntersecting &&
            entry.boundingClientRect.top > 0
          ) {
            animationClasses.forEach((className: any) => {
              entry.target.classList.remove(className);
            });
          }
        });
      };

      const observer = new IntersectionObserver(callback);

      animations.forEach((animation) => observer.observe(animation));
    </script>
  </body>
</html>
